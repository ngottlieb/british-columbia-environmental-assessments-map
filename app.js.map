{"version":3,"sources":["app/components/App.js","app/components/EAOMap.js","app/components/FilterBox.js","app/components/ProjectMarker.js","app/initialize.js"],"names":["App","props","React","Component","L","Icon","Default","imagePath","EAOMap","state","projects","currProjects","latlng","lat","lng","optionsForFilters","typeOptions","decisionOptions","phaseOptions","zoom","applyFilter","bind","fetchData","self","fetch","then","response","json","j","setState","processProjects","filteredProjects","includeNA","map","proj","decisionYear","decisionDate","year","years","p","filter","y","minYear","Math","min","apply","maxYear","max","type","decision","eacDecision","phase","currentPhase","name","startDate","endDate","newProjects","options","types","Set","decisions","length","phases","position","access_token","markers","isLoading","ProjectMarkers","items","id","display","FilterBox","handleInputChange","handleDateSliderChange","event","target","value","checked","updateFilter","updates","newFilter","Object","assign","decisionDateInputs","optionsForFilter","attribute","opt","push","FilterSelect","onChange","label","ProjectMarker","lon","projectIcon","description","projectUrl","code","iconUrl","includes","icon","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"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","file":"public/app.js","sourcesContent":["import React from 'react';\nimport EAOMap from './EAOMap';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div id='app'>\n        <EAOMap />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Map, Marker, Popup, TileLayer, Pane } from 'react-leaflet';\nimport ProjectMarker from './ProjectMarker';\nimport L from 'leaflet';\nimport FilterBox from './FilterBox';\nimport moment from 'moment';\nimport Spinner from 'react-spinner';\n\nL.Icon.Default.imagePath =\n  '//cdnjs.cloudflare.com/ajax/libs/leaflet/1.3.4/images/';\n\nexport default class EAOMap extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: [],\n      currProjects: [],\n      latlng: {\n        lat: 55.4085,\n        lng: -125.0257\n      },\n      optionsForFilters: {\n        typeOptions: [],\n        decisionOptions: [],\n        phaseOptions: []\n      },\n      zoom: 6\n    }\n    this.applyFilter = this.applyFilter.bind(this);\n    this.fetchData();\n  }\n\n  fetchData() {\n    var self = this;\n    fetch(\"https://cors-anywhere.herokuapp.com/https://projects.eao.gov.bc.ca/api/projects/published\")\n      .then(function(response) { return response.json(); })\n      .then(function(j) { self.setState({ projects: self.processProjects(j), currProjects: self.filteredProjects(j, { includeNA: true }) }) });\n  }\n\n  // get decisionYear for all projects\n  processProjects(projects) {\n    if (projects) {\n      // get options for the drop down filters\n      this.setState({\n        optionsForFilters: this.optionsForFilters(projects)\n      });\n\n      projects.map((proj) => {\n        proj.decisionYear = moment(proj.decisionDate).year();\n        return proj;\n      });\n\n      // get beginning and end years for the date sliders\n      const years = projects.map(function(p) { return p.decisionYear; }).filter(function(y) { return (y ? y > 0 : false); });;\n      this.setState({\n        minYear: Math.min.apply(Math, years),\n        maxYear: Math.max.apply(Math, years)\n      });\n    }\n    return projects;\n  }\n\n  filteredProjects(projects, filter) {\n    return projects.filter(function(proj) {\n      // check each condition and return false if it doesn't meet the test\n      if (filter.type && proj.type && filter.type !== proj.type) { return false; }\n      if (filter.decision && proj.eacDecision && filter.decision !== proj.eacDecision) { return false; }\n      if (filter.phase && proj.currentPhase.name && filter.phase !== proj.currentPhase.name) { return false; }\n\n      if (!filter.includeNA && !proj.decisionYear) {\n        return false;\n      }\n\n      if (filter.startDate && proj.decisionYear) {\n        if (filter.startDate > proj.decisionYear) {\n          return false;\n        }\n      }\n      if (filter.endDate && proj.decisionYear) {\n        if (filter.endDate < proj.decisionYear && proj.decisionYear) {\n          return false;\n        }\n      }\n      return true;\n    });\n  }\n\n  applyFilter(filter) {\n    const newProjects = this.filteredProjects(this.state.projects, filter);\n    this.setState({\n      currProjects: newProjects\n    });\n  }\n\n  optionsForFilters(projects) {\n    var options = {};\n    // type options\n    const types = projects.map(function(p) { return p.type; });\n    options.typeOptions = new Set(types)\n\n    var decisions = projects.map(function(p) { return p.eacDecision; });\n    options.decisionOptions = new Set(decisions.filter(\n      function(p) { \n        if (p) {\n          return p.length > 0;\n        } else {\n          return false;\n        }}));\n    \n    var phases = projects.map(function(p) { return p.currentPhase.name; });\n    options.phaseOptions = new Set(phases);\n\n    return options;\n  }\n\n\n  render() {\n    const position = this.state.latlng;\n    const zoom = this.state.zoom;\n    const access_token = 'pk.eyJ1IjoibmdvdHRsaWViIiwiYSI6ImNqOW9uNGRzYTVmNjgzM21xemt0ZHVxZHoifQ.A6Mc9XJp5q23xmPpqbTAcQ'\n    const markers = (<ProjectMarkers projects={this.state.currProjects} />);\n    const isLoading = this.state.projects.length == 0;\n    const map = (\n      <div>\n        <Map center={position} zoom={zoom}>\n          <TileLayer\n            url='https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}'\n            accessToken={access_token}\n            id=\"mapbox.outdoors\"\n            attribution=\"data <a href='https://projects.eao.gov.bc.ca/'>courtesy of the BC government</a>\"\n            minZoom={5}\n          />\n          { isLoading ? (<Spinner />) : markers }\n        </Map>\n        <FilterBox\n          optionsForFilters={this.state.optionsForFilters}\n          applyFilter={this.applyFilter}\n          minYear={this.state.minYear}\n          maxYear={this.state.maxYear}\n        />\n      </div>\n    );\n    return map;\n  }\n}\n\nconst ProjectMarkers = ({ projects }) => {\n  if (projects) {\n    const items = projects.map((props) => (\n      <ProjectMarker key={props.id} {...props} />\n    ));\n    return <div style={{ display: 'none' }}>{items}</div>;\n  }\n}\n","import React from 'react';\nimport { MapControl } from 'react-leaflet';\nimport { Well, Form, FormGroup, FormControl, Checkbox, ControlLabel, Col } from 'react-bootstrap';\nimport ReactSlider from 'react-slider';\n\nexport default class FilterBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filter: {\n        minYear: this.props.minYear,\n        maxYear: this.props.maxYear,\n        includeNA: true\n      }\n    }\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleDateSliderChange = this.handleDateSliderChange.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.updateFilter({ [name]: value });\n  }\n\n  updateFilter(updates) {\n    var newFilter = Object.assign({}, this.state.filter);\n    Object.assign(newFilter, updates);\n    this.setState({\n      filter: newFilter\n    });\n    this.props.applyFilter(newFilter);\n  }\n\n  handleDateSliderChange(value) {\n    this.updateFilter({\n      startDate: value[0],\n      endDate: value[1]\n    });\n  }\n\n  render() {\n\n    var decisionDateInputs;\n    // only render the slider once we've established its bounds\n    if (this.props.minYear && this.props.maxYear) {\n      decisionDateInputs = (\n        <FormGroup controlId=\"decisionDate\">\n          <ControlLabel>Decision Date</ControlLabel>\n          <Checkbox\n            checked={this.state.filter.includeNA}\n            name=\"includeNA\"\n            onChange={this.handleInputChange}\n          >\n            Include Pending or Decision Date Not Available\n          </Checkbox>\n          <ReactSlider\n            min={this.props.minYear}\n            max={this.props.maxYear}\n            withBars\n            pearling\n            onChange={this.handleDateSliderChange}\n          >\n            <div>{this.state.filter.startDate || this.props.minYear}</div>\n            <div>{this.state.filter.endDate || this.props.maxYear}</div>\n          </ReactSlider>\n        </FormGroup>\n      );\n    }\n\n    return (\n      <Well className='filter-box leaflet-top leaflet-control leaflet-right'>\n        <h3>Filter Results</h3>\n        <Form>\n          <FilterSelect\n            attribute=\"type\"\n            value={this.state.filter.type}\n            onChange={this.handleInputChange}\n            label=\"Project Type\"\n            options={this.optionsForFilter(\"type\")}\n          />\n\n          <FilterSelect\n            attribute=\"decision\"\n            value={this.state.filter.decision}\n            onChange={this.handleInputChange}\n            label=\"Decision Status\"\n            options={this.optionsForFilter(\"decision\")}\n          />\n\n          <FilterSelect\n            attribute=\"phase\"\n            value={this.state.filter.phase}\n            onChange={this.handleInputChange}\n            label=\"Phase\"\n            options={this.optionsForFilter(\"phase\")}\n          />\n\n        { decisionDateInputs }\n\n        </Form>\n      </Well>\n    );\n  }\n\n  optionsForFilter(attribute) {\n    const options = [];\n    for (let opt of this.props.optionsForFilters[attribute + \"Options\"]) {\n      options.push(<option value={opt}>{opt}</option>);\n    }\n    return(options);\n  }\n\n}\n\nconst FilterSelect = ({ attribute, value, onChange, label, options }) => {\n  return (\n    <FormGroup controlId={attribute}>\n      <ControlLabel>{label}</ControlLabel>\n      <FormControl\n        componentClass=\"select\"\n        value={value}\n        onChange={onChange}\n        name={attribute}\n      >\n        <option value=\"\">All</option>\n        {options}\n      </FormControl>\n    </FormGroup>\n  );\n}\n\n","import { Marker, Popup } from 'react-leaflet';\nimport React from 'react';\nimport L from 'leaflet';\n\nexport default class ProjectMarker extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <Marker position={[this.props.lat, this.props.lon]} icon={this.projectIcon()}>\n        <Popup>\n          <h3>{this.props.name}</h3>\n          <p>{this.props.description}</p>\n          <a target=\"_blank\" href={this.projectUrl()}>More Info</a>\n        </Popup>\n      </Marker>\n    );\n  }\n\n  projectUrl() {\n    return \"https://projects.eao.gov.bc.ca/p/\" + this.props.code + \"/detail\";\n  }\n\n  // icons courtesy of https://mapicons.mapsmarker.com/\n  projectIcon() {\n    var iconUrl;\n    switch(this.props.type) {\n      case 'Mines':\n        iconUrl = 'images/mine-icon.png';\n        break;\n      case 'Energy-Electricity':\n        if (this.props.name.includes(\"Hydro\")) {\n          iconUrl = 'images/dam-icon.png';\n        } else if (this.props.name.includes(\"Wind\")) {\n          iconUrl = 'images/wind-icon.png';\n        } else {\n          iconUrl = 'images/power-icon.png';\n        }\n        break;\n      case 'Transportation':\n        iconUrl = 'images/road-icon.png';\n        break;\n      case 'Energy-Petroleum & Natural Gas':\n        iconUrl = 'images/oil-icon.png';\n        break;\n      case 'Water Management':\n        iconUrl = 'images/water-management-icon.png';\n        break;\n      case 'Waste Disposal':\n        iconUrl = 'images/waste-icon.png';\n        break;\n      case 'Tourist Destination Resorts':\n        iconUrl = 'images/tourism-icon.png';\n        break;\n      case 'Industrial':\n        iconUrl = 'images/industry-icon.png';\n        break;\n      default:\n        iconUrl = 'images/marker-icon.png';\n        break;\n    }\n\n    var icon = L.icon({ iconUrl: iconUrl });\n    return(icon);\n  }\n}\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport App from 'components/App';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  ReactDOM.render(<App />, document.getElementById('container'));\n});\n"]}